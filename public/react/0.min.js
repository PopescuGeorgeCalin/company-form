(window.webpackJsonpvetrob2c_companies_my_account_0_0_1=window.webpackJsonpvetrob2c_companies_my_account_0_0_1||[]).push([[0],{11:function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return F}));var i=a(12),t=a.n(i),r=a(15),c=a(5),d=a(0),l=a.n(d),o=a(7),u=a.n(o),m=a(8),s=a.n(m),v=a(9),k=a.n(v),f=a(10),p=a.n(f),h=a(13),g=function(e){var n=e.fields,a=e.id,i=n.reduce((function(e,n){var a=n.key,i=n.value;return Object.assign(Object.assign({},e),Object(h.a)({},a,i))}),{}),t=i.firstName,r=i.lastName,c=i.email,d=[t,r].filter((function(e){return e})).join(" ");return Object.assign({id:a,name:d,email:c},i)},b=a(4),y=a(16),S=a.n(y),N=a(17),w=a.n(N),E=function(e){var n,a,i=Object(d.useState)(!0),t=Object(c.a)(i,2),r=t[0],o=t[1],u=e.companyCIF,m=(a={variables:{where:"companyCIF=*".concat(u.replace(/RO/gi,"").trim(),"*")}},Object(b.useQuery)(w.a,a));return Object(d.useEffect)((function(){m.loading?o(!0):o(!1)}),[m]),r?l.a.createElement(l.a.Fragment,null):l.a.createElement("div",null,null===(n=m.data)||void 0===n?void 0:n.documents.map((function(e,n){var a=g(e);return l.a.createElement("div",{key:n,className:"mb3"},a.companyName)})))},_={titleId:"store/my-companies.page"},F=function(){var e,n=Object(d.useState)(!0),a=Object(c.a)(n,2),i=a[0],o=a[1],m=Object(d.useState)(""),v=Object(c.a)(m,2),f=v[0],h=v[1],y=(e={variables:{where:"clientEmail=".concat(f)}},Object(b.useQuery)(S.a,e));return Object(d.useEffect)((function(){y.loading?o(!0):o(!1)}),[y,f]),Object(d.useEffect)((function(){fetch("/no-cache/profileSystem/getProfile").then((function(e){return e.json()})).then(function(){var e=Object(r.a)(t.a.mark((function e(n){return t.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n.IsUserDefined&&h(n.Email);case 1:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}())}),[f]),i?l.a.createElement(s.a,{queryData:y,headerConfig:_},l.a.createElement(k.a,{shouldAllowGrowing:!0})):l.a.createElement(u.a,_,(function(){var e,n;return(null===(e=y.data)||void 0===e?void 0:e.documents.length)?null===(n=y.data)||void 0===n?void 0:n.documents.map((function(e,n){var a=g(e);return l.a.createElement(E,{companyCIF:a.companyCIF,key:n})})):l.a.createElement(p.a,{title:"Oops."},l.a.createElement("p",null,"Sorry. We couldn't find any companies associated with your user."))}))}},16:function(e,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"CompaniesRelationships"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[{kind:"Directive",name:{kind:"Name",value:"context"},arguments:[{kind:"Argument",name:{kind:"Name",value:"scope"},value:{kind:"StringValue",value:"private",block:!1}},{kind:"Argument",name:{kind:"Name",value:"sender"},value:{kind:"StringValue",value:"vetrob2c.companies-my-account@0.0.1",block:!1}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"documents"},arguments:[{kind:"Argument",name:{kind:"Name",value:"acronym"},value:{kind:"StringValue",value:"RC",block:!1}},{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"fields"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"clientEmail",block:!1},{kind:"StringValue",value:"companyCIF",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"schema"},value:{kind:"StringValue",value:"healthmp-caregivers",block:!1}}],directives:[{kind:"Directive",name:{kind:"Name",value:"context"},arguments:[{kind:"Argument",name:{kind:"Name",value:"provider"},value:{kind:"StringValue",value:"vtex.store-graphql",block:!1}}]},{kind:"Directive",name:{kind:"Name",value:"runtimeMeta"},arguments:[{kind:"Argument",name:{kind:"Name",value:"hash"},value:{kind:"StringValue",value:"aa41257d8809932cf3488b556d74b3f2027472f383b2a933139050ae39f1a8c6",block:!1}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cacheId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fields"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"key"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:461}};a.loc.source={body:'query CompaniesRelationships($where: String) @context(scope: "private", sender: "vetrob2c.companies-my-account@0.0.1") {\n  documents(acronym: "RC", where: $where, fields: ["clientEmail", "companyCIF"], schema: "healthmp-caregivers") @context(provider: "vtex.store-graphql") @runtimeMeta(hash: "aa41257d8809932cf3488b556d74b3f2027472f383b2a933139050ae39f1a8c6") {\n    cacheId\n    id\n    fields {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function t(e,n){for(var a=0;a<e.definitions.length;a++){var i=e.definitions[a];if(i.name&&i.name.value==n)return i}}a.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,a){if("FragmentSpread"===n.kind)a.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&a.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,a)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,a)})),n.definitions&&n.definitions.forEach((function(n){e(n,a)}))}(e,n),i[e.name.value]=n}})),e.exports=a,e.exports.CompaniesRelationships=function(e,n){var a={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var r=i[n]||new Set,c=new Set,d=new Set;for(r.forEach((function(e){d.add(e)}));d.size>0;){var l=d;d=new Set,l.forEach((function(e){c.has(e)||(c.add(e),(i[e]||new Set).forEach((function(e){d.add(e)})))}))}return c.forEach((function(n){var i=t(e,n);i&&a.definitions.push(i)})),a}(a,"CompaniesRelationships")},17:function(e,n){var a={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Companies"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"where"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[{kind:"Directive",name:{kind:"Name",value:"context"},arguments:[{kind:"Argument",name:{kind:"Name",value:"scope"},value:{kind:"StringValue",value:"private",block:!1}},{kind:"Argument",name:{kind:"Name",value:"sender"},value:{kind:"StringValue",value:"vetrob2c.companies-my-account@0.0.1",block:!1}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"documents"},arguments:[{kind:"Argument",name:{kind:"Name",value:"acronym"},value:{kind:"StringValue",value:"MC",block:!1}},{kind:"Argument",name:{kind:"Name",value:"where"},value:{kind:"Variable",name:{kind:"Name",value:"where"}}},{kind:"Argument",name:{kind:"Name",value:"fields"},value:{kind:"ListValue",values:[{kind:"StringValue",value:"companyName",block:!1},{kind:"StringValue",value:"companyCIF",block:!1}]}},{kind:"Argument",name:{kind:"Name",value:"schema"},value:{kind:"StringValue",value:"healthmp-caregivers",block:!1}}],directives:[{kind:"Directive",name:{kind:"Name",value:"context"},arguments:[{kind:"Argument",name:{kind:"Name",value:"provider"},value:{kind:"StringValue",value:"vtex.store-graphql",block:!1}}]},{kind:"Directive",name:{kind:"Name",value:"runtimeMeta"},arguments:[{kind:"Argument",name:{kind:"Name",value:"hash"},value:{kind:"StringValue",value:"c23973f1992c92bb31d26d37b5323866c804e1682e7428e313ba34992be94aec",block:!1}}]}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"cacheId"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fields"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"key"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"__typename"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:448}};a.loc.source={body:'query Companies($where: String) @context(scope: "private", sender: "vetrob2c.companies-my-account@0.0.1") {\n  documents(acronym: "MC", where: $where, fields: ["companyName", "companyCIF"], schema: "healthmp-caregivers") @context(provider: "vtex.store-graphql") @runtimeMeta(hash: "c23973f1992c92bb31d26d37b5323866c804e1682e7428e313ba34992be94aec") {\n    cacheId\n    id\n    fields {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n}\n',name:"GraphQL request",locationOffset:{line:1,column:1}};var i={};function t(e,n){for(var a=0;a<e.definitions.length;a++){var i=e.definitions[a];if(i.name&&i.name.value==n)return i}}a.definitions.forEach((function(e){if(e.name){var n=new Set;!function e(n,a){if("FragmentSpread"===n.kind)a.add(n.name.value);else if("VariableDefinition"===n.kind){var i=n.type;"NamedType"===i.kind&&a.add(i.name.value)}n.selectionSet&&n.selectionSet.selections.forEach((function(n){e(n,a)})),n.variableDefinitions&&n.variableDefinitions.forEach((function(n){e(n,a)})),n.definitions&&n.definitions.forEach((function(n){e(n,a)}))}(e,n),i[e.name.value]=n}})),e.exports=a,e.exports.Companies=function(e,n){var a={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var r=i[n]||new Set,c=new Set,d=new Set;for(r.forEach((function(e){d.add(e)}));d.size>0;){var l=d;d=new Set,l.forEach((function(e){c.has(e)||(c.add(e),(i[e]||new Set).forEach((function(e){d.add(e)})))}))}return c.forEach((function(n){var i=t(e,n);i&&a.definitions.push(i)})),a}(a,"Companies")}}]);